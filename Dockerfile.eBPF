FROM alpine:3.19 AS base

USER root
RUN apk add bcc-tools bcc-dev bcc-doc linux-headers build-base

FROM base AS builder

# Install Go based on architecture
ARG GO_VERSION=1.21.11
ARG TARGETARCH

RUN if [ "$TARGETARCH" = "arm64" ]; then ARCH="arm64"; elif [ "$TARGETARCH" = "amd64" ]; then ARCH="amd64"; else ARCH="armv7"; fi && \
    wget https://go.dev/dl/go${GO_VERSION}.linux-${ARCH}.tar.gz && \
    tar -C /usr/local -xzf go${GO_VERSION}.linux-${ARCH}.tar.gz && \
    rm go${GO_VERSION}.linux-${ARCH}.tar.gz

ENV PATH="/usr/local/go/bin:${PATH}"

COPY ebpf ./ebpf
COPY trafficUtil ./trafficUtil
WORKDIR /ebpf

RUN go get
RUN go mod download
RUN sed -i "s/\"p_/\"akto_p_/g" ~/go/pkg/mod/github.com/iovisor/gobpf@v0.2.1-0.20221005153822-16120a1bf4d4/bcc/module.go
RUN sed -i "s/\"r_/\"akto_r_/g" ~/go/pkg/mod/github.com/iovisor/gobpf@v0.2.1-0.20221005153822-16120a1bf4d4/bcc/module.go
RUN sed -i "s/attachUProbe(/AttachUProbeInternal(/g" ~/go/pkg/mod/github.com/iovisor/gobpf@v0.2.1-0.20221005153822-16120a1bf4d4/bcc/module.go
RUN sed -i "s/resolveSymbolPath(/ResolveSymbolPath(/g" ~/go/pkg/mod/github.com/iovisor/gobpf@v0.2.1-0.20221005153822-16120a1bf4d4/bcc/symbol.go
RUN sed -i "s/resolveSymbolPath(/ResolveSymbolPath(/g" ~/go/pkg/mod/github.com/iovisor/gobpf@v0.2.1-0.20221005153822-16120a1bf4d4/bcc/module.go

RUN go build -o ebpf-logging

FROM base

WORKDIR /ebpf
COPY --from=builder /ebpf/ebpf-logging /ebpf/ebpf-logging
COPY --from=builder /ebpf/kernel/module.cc /ebpf/kernel/module.cc
COPY ebpf-run.sh /ebpf/ebpf-run.sh
RUN chmod +x /ebpf/ebpf-run.sh

RUN apk add perf

CMD ["./ebpf-run.sh"]
